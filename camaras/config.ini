# Camera Configuration`
# Edit the RTSP URLs below to match your camera setup
# Each camera has two streams: main (high-res) and low-res (stream2)

[cameras]
# Main streams (high resolution) - Scalable configuration
# Start with 1 camera, uncomment more as needed (up to 8)
camera1_url = rtsp://192.168.0.200:554/stream1
camera2_url = rtsp://192.168.0.201:554/stream1
camera3_url = rtsp://192.168.0.202:554/stream1
camera4_url = rtsp://192.168.0.203:554/stream1
camera5_url = rtsp://admin:admin@192.168.0.204:554/profile0
camera6_url = rtsp://admin:admin@192.168.0.205:554/profile0  
camera7_url = rtsp://admin:admin@192.168.0.206:554/profile0
#camera8_url = rtsp://192.168.0.202:554/stream1

# Low resolution streams (for 'L' key switching)
camera1_url_lowres = rtsp://192.168.0.200:554/stream2
camera2_url_lowres = rtsp://192.168.0.201:554/stream2
camera3_url_lowres = rtsp://192.168.0.202:554/stream2
camera4_url_lowres = rtsp://192.168.0.203:554/stream2
camera5_url_lowres = rtsp://admin:admin@192.168.0.204:554/profile1
camera6_url_lowres = rtsp://admin:admin@192.168.0.205:554/profile1
camera7_url_lowres = rtsp://admin:admin@192.168.0.206:554/profile1
#camera8_url_lowres = rtsp://192.168.0.202:554/stream2

[display]
# Display size for each camera (width x height)
single_camera_width = 1920
single_camera_height = 1080

# Maximum FPS for display (to control CPU usage) - increased for lower latency
max_display_fps = 120

[performance]
# Frame buffer size (1 = lowest latency, higher = more stable)
frame_buffer_size = 5

# Auto-restart failed cameras after this many seconds
restart_delay = 2

# Maximum connection retry attempts
max_retries = 5

# Health check timeout in seconds (how long without frames before considering unhealthy)
health_check_timeout = 8

# Connection timeout in milliseconds for RTSP streams (reduced for faster failover)
connection_timeout_ms = 3000

# Hardware acceleration settings (enabled by default for best performance)
enable_hardware_acceleration = true
hw_accel_device = /dev/dri/renderD128

# Read timeout in milliseconds for individual frames (reduced for lower latency)
read_timeout_ms = 2000

# Frame read timeout in seconds (how long to wait for a single frame)
frame_read_timeout = 3

# Ultra low latency mode - enables aggressive optimizations (true/false)
ultra_low_latency_mode = true

# Initial camera quality mode (high-res/low-res) - determines startup stream quality
initial_quality_mode = high-res

# Connection timeout in seconds for establishing RTSP connection
connection_timeout = 30

# Maximum consecutive failures before giving up on a camera
max_consecutive_failures = 8

# EOF error retry delay (seconds) - shorter delay for EOF errors
eof_retry_delay = 5

# Disable overlays for maximum performance (true/false)
disable_overlays = false

# Zero-copy optimizations (experimental - may cause instability)
zero_copy_mode = false

# Skip display sync - render frames as fast as possible (true/false)
skip_display_sync = true

# Minimal processing mode - skip all non-essential processing (true/false)
minimal_processing_mode = true

# Memory pool size for frame buffers (0 = auto-detect)
memory_pool_size = 0

# Use hardware decoding if available (true/false)
hardware_decode = true

# Skip frame validation for speed (experimental - may cause artifacts)
skip_frame_validation = false    

# Suppress OpenCV format warnings (reduces log noise)
suppress_format_warnings = true

# Force RGB conversion (helps with yuvj420p and similar formats)
force_rgb_conversion = true
